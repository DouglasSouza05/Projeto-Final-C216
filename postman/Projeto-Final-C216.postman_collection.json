{
	"info": {
		"_postman_id": "988e7bbd-4144-4add-aebe-35d88d976b3c",
		"name": "Projeto-Final-C216",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33845705"
	},
	"item": [
		{
			"name": "POST - Add Cards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Counterspell\",\r\n    \"cost\": \"{U}{U}\",\r\n    \"rarity\": \"Incomum\",\r\n    \"type\": \"Instant\",\r\n    \"description\": \"Counter target spell.\",\r\n    \"quantity\": 7,\r\n    \"price\": 11.95\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/addCard/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"addCard",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - List Cards",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/listCards/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"listCards",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Search Cards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/searchCard/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"searchCard",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Delete Cards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/deleteCard/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"deleteCard",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Reset Stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/resetStock/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"resetStock",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH - Atualizar Atributos de uma Carta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response should confirm update\", function () {\r",
							"    pm.expect(pm.response.json().message).to.eql('Componente atualizado com sucesso!');\r",
							"});\r",
							"\r",
							"// Validar se o componente foi atualizado corretamente\r",
							"pm.sendRequest(\"http://127.0.0.1:8000/api/v1/componentes/3\", function (err, res) {\r",
							"    pm.test(\"Os atributos do componente foram atualizados\", function () {\r",
							"        let componente = res.json();\r",
							"        pm.expect(componente.nome).to.eql(\"Placa de Vídeo - Nova Geração\");\r",
							"        pm.expect(componente.marca).to.eql(\"Nvidia\");\r",
							"        pm.expect(componente.quantidade).to.eql(20);\r",
							"        pm.expect(componente.preco).to.eql(3500.00); // Verifica se o preço foi alterado\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Placa de Vídeo - Nova Geração\",\r\n  \"marca\": \"Nvidia\",\r\n  \"quantidade\": 20,\r\n  \"preco\": 3500.00\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/componentes/3",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"componentes",
						"3"
					]
				},
				"description": "Atualiza os atributos de um componente, exceto o ID."
			},
			"response": []
		},
		{
			"name": "PUT - Vender uma Carta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"quantity\": 7\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/sellCard/2",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"sellCard",
						"2"
					],
					"query": [
						{
							"key": "",
							"value": "apl",
							"disabled": true
						}
					]
				},
				"description": "Deduz uma unidade da quantidade de um componente ao realizar uma venda."
			},
			"response": []
		},
		{
			"name": "GET - Listar todas as Vendas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response should confirm sales details\", function () {\r",
							"    let venda = pm.response.json()[0];\r",
							"    pm.expect(venda.valor_venda).to.eql(1000.0); // O valor deve ser o calculo correto da venda efetuada\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/vendas/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"vendas",
						""
					]
				},
				"description": "Testa o endpoint para listar todas as vendas."
			},
			"response": []
		}
	]
}